Kubernetse - платформа/фреймворк с открытым исходным кодом для управления контейнерами типо docker (с греческого "Kubernetes" - рулевой, штурман)

1. Масштабирование, шаблоны, обработка ошибок приложений, ...
2. Мониторинг серверов и распространение нагрузки между контейнерами, оркестрация хранилища (локальное, облако, ...), автоматическое развертывание и откаты, автоматическое распределение нагрузки (скок cpu и памяти нужно на какой контейнер), самоконтроль, управление конф.инф. и конфигурациями
3. Cluster (все железо для приложения, серваки и т.д. ...):
- Master node (один сервак, который управляет другими серваками) / control plane: 
-- Api server (взаимодействие  кластера извне)
-- Control manager (проверяет работоспособность всего кластера и чинит его, если возникают проблемы, старается чтобы current state всегда был desired state)
-- Scheduler (планирует на какие сервера расположить какие контейнеры)
-- etcd (хранилище для конф.инфы и конфигураций, key-value)
- Worker node (где работает все приложения) / data plane
-- kubelet (общается с мастером : получает инструкции от его / и с container runtime : запуск, установка, ресурсы контейнера)
-- kube-proxy (балансировка внутренней сети)
-- container runtime (имеет все образы контейнера)

Pod (то, где крутится контейнер + можно внутри запускать несколько контейнеров, находятся внутри Worker node): 
- каждый имеет свой ip
- Service : объеденяет несколько подов и выдает им постоянный ip

Настройка: отправка конфига.yml на Api server (в Master node)

Пример: 
deployment-controller.yaml (шаблон для создания подов, desired state - состояние к которому Kubernetes будет стараться привести систему):
apiVersion: apps/v1
kind: Deployment
metadata:
    name: nginx-deployment
    labels:
        app: nginx
spec: 
    replicas: 3
    selector: 
        matchLabels: 
            app: nginx
        template: 
            metadata: 
                labels: 
                    app: nginx
                spec:
                    containers:
                    - name: nginx
                      image: nginx:1.14.2
                      ports:
                          containerPort: 80