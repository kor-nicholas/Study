from loader import dp

from aiogram.types import Message, CallbackQuery
from aiogram.dispatcher import FSMContext

from keyboards.inline.inline_keyboards import *
from keyboards.reply.reply_keyboards import *

from config import photo_id

from state.state import Test

@dp.message_handler(commands=['start'])
async def start(message : Message):
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}.\n–Ø –ö–∞–ø–∏—Ç–∞–Ω –†–æ–±–æ—Ç-–î–æ—Å—Ç–∞–≤–∫–∏, —Ä–æ–∂–¥–µ–Ω\n—Å–ø–∞—Å–∞—Ç—å –∂–∏—Ç–µ–ª–µ–π"
                         f"–≥–æ—Ä–æ–¥–∞ –æ—Ç –≥–æ–ª–æ–¥–∞. –°\n—ç—Ç–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞, –∑–Ω–∞–π, —è –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤ —Ç–µ–±–µ\n–ø–æ–º–æ—á—å.\n–ù–∞—á–Ω–µ–º?",reply_markup=main)

@dp.message_handler()
async def process_text(message : Message):
    if message.text == '–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ üçΩ':
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∑–∞–∫–∞–∑–∞",reply_markup=type_order)
    elif message.text == '–°–≤—è–∑–∞—Ç—å—Å—è —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º üìû':
        await message.answer("+7 987 181-89-01")
    elif message.text == '–ê–∫—Ü–∏–∏ –∏ —Å–∫–∏–¥–∫–∏ üéâ':
        await message.answer("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∞–∫—Ü–∏–π –∏ —Å–∫–∏–¥–æ–∫ –Ω–µ—Ç.")
    elif message.text == '–ö–æ—Ä–∑–∏–Ω–∞ üõí':
        pass
    elif message.text == '–ù–∞–∑–∞–¥':
        await message.delete()
        await message.answer_photo(caption='–ú–µ–Ω—é', reply_markup=menu, photo=photo_id['main_menu'])

@dp.callback_query_handler(text='type_order')
async def type(call : CallbackQuery):
    await call.message.delete()
    await call.message.answer("–î–æ—Å—Ç–∞–≤–∫–∞")
    await call.message.answer("–í–≤–µ–¥–∏—Ç–µ –ø–æ–ª–Ω—ã–π –∞–¥—Ä–µ—Å")
    await Test.addres.set()

@dp.message_handler(state=Test.addres)
async def addres(message : Message, state : FSMContext):
    answer = message.text
    await state.update_data(addres=answer)
    await state.finish()
    await message.answer("–•–æ—Ç–∏—Ç–µ –ª–∏ –≤—ã, –Ω–∞–ø–∏—Å–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –∫—É—Ä—å–µ—Ä–∞ ?", reply_markup=yes_or_no)
    #await Test.more_info.set()

@dp.callback_query_handler(text='yes')
async def yes_(call : CallbackQuery):
    await call.answer("–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
    await call.message.delete()
    await Test.more_info.set()

@dp.message_handler(state=Test.more_info)
async def more_info(message : Message, state : FSMContext):
    answer = message.text
    await state.update_data(more_info=answer)
    await state.finish()
    await message.answer("–ü–µ—Ä–µ–π–¥–µ–º –∫ –º–µ–Ω—é ?",reply_markup=to_menu)

@dp.callback_query_handler(text='no')
async def no_(call : CallbackQuery, state : FSMContext):
    answer = call.message.text
    await state.update_data(more_info=answer)
    await state.finish()
    await call.message.delete()
    await call.message.answer("–ü–µ—Ä–µ–π–¥–µ–º –∫ –º–µ–Ω—é ?",reply_markup=to_menu)

@dp.callback_query_handler(text='menu')
async def menu_main(call : CallbackQuery):
    await call.message.delete()
    await call.message.answer_photo(caption='–ú–µ–Ω—é',reply_markup=menu,photo=photo_id['main_menu'])

@dp.callback_query_handler(text='bakery')
async def backary(call : CallbackQuery):
    await call.message.delete()
    await call.message.answer_photo(caption='–ú–µ–Ω—é',reply_markup=bakerys,photo=photo_id['main_menu'])

@dp.callback_query_handler(text='backery_1')
async def backary_1(call : CallbackQuery):
    await call.message.delete()
    await call.message.answer_photo(caption='–ë—É–ª–æ—á–∫–∏', reply_markup=bakerys_1, photo=photo_id['backery'])

@dp.callback_query_handler(text='garnish')
async def garnish(call : CallbackQuery):
    await call.message.delete()
    await call.message.answer_photo(caption='–ú–µ–Ω—é', reply_markup=garnishs, photo=photo_id['main_menu'])

@dp.callback_query_handler(text='garnish_1')
async def garnish_1(call : CallbackQuery):
    await call.message.delete()
    await call.message.delete()
    await call.message.answer_photo(
        caption='–ö—Ä–µ–≤–µ—Ç–∫–∏, –º–∏–¥–∏–∏, –∫–∞–ª—å–º–∞—Ä, –æ—Å—å–º–∏–Ω–æ–≥, –æ—Å–æ–±—ã–∏ÃÜ –±—É–ª—å–æ–Ω, —Ç–æ–º–∞—Ç—ã —á–µ—Ä—Ä–∏, '
                '—Å–æ–∫ –ª–∞–∏ÃÜ–º–∞, —Å–ª–∏–≤–∫–∏, —Ä—ã–±–Ω—ã–∏ÃÜ —Å–æ—É—Å –∏ —Ä–∏—Å', reply_markup=garnishs_1, photo=photo_id['garnish'])

@dp.callback_query_handler(text='hot_meat')
async def hot_meat(call : CallbackQuery):
    await call.message.delete()
    await call.message.answer_photo(caption='–ú–µ–Ω—é', reply_markup=hot_meats, photo=photo_id['main_menu'])

@dp.callback_query_handler(text='hot_meat_1')
async def hot_meat_1(call : CallbackQuery):
    await call.message.delete()
    await call.message.delete()
    await call.message.answer_photo(
        caption='–ú—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è –í–∞—Å –≤–∫—É—Å–Ω–µ–Ω—å–∫–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ - –∫—É—Ä–æ—á–∫—É –∏–∑ —ç–ª–∏—Ç–Ω–æ–≥–æ —Ä–∞–π–æ–Ω–∞ –°–µ—É–ª–∞ - Gangnam. '
                '–†–µ—Ü–µ–ø—Ç—É—Ä–∞ –æ—Ç—à–ª–∏—Ñ–æ–≤–∞–Ω–Ω–∞—è –≥–æ–¥–∞–º–∏ –∑–∞–≤–æ–µ–≤–∞–ª–∞ –ö–æ—Ä–µ—é –∏ –≤–µ—Å—å –º–∏—Ä —Å–≤–æ–∏–º –Ω–µ–ø–æ–≤—Ç–æ—Ä–∏–º—ã–º –≤–∫—É—Å–æ–º. '
                '–ù–µ—É–¥–∏–≤–∏—Ç–µ–ª—å–Ω–æ —á—Ç–æ –≤ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ —Å—Ç—Ä–∞–Ω –ê–∑–∏–∏ —ç—Ç–æ —è–≤–ª—è–µ—Ç—Å—è —Å–∞–º—ã–º —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—ë–Ω–Ω—ã–º –±–∏–∑–Ω–µ—Å-–ª–∞–Ω—á–µ–º',
        reply_markup=hot_meats_1, photo=photo_id['hot_meat'])

@dp.callback_query_handler(text='drink')
async def drink(call : CallbackQuery):
    await call.message.delete()
    await call.message.answer_photo(caption='–ú–µ–Ω—é', reply_markup=drinks, photo=photo_id['main_menu'])

@dp.callback_query_handler(text='drink_1')
async def drink_1(call : CallbackQuery):
    await call.message.delete()
    await call.message.answer_photo(
        caption='–ë–æ–ª—å—à–æ–π —á–∏–∫–µ–Ω ‚Äî —ç—Ç–æ "—Å–±–æ—Ä–Ω–∞—è" –∫—É—Ä–æ—á–∫–∞ –≤ –ª—é–±–æ–º –∏–∑ 7-–º–∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –≤–∫—É—Å–æ–≤. '
                '–í –æ–¥–Ω–æ–º –∑–∞–∫–∞–∑–µ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –∫—Ä—ã–ª—ã—à–∫–∏, –Ω–æ–∂–∫–∏, –≥—Ä—É–¥–∫—É –∏ –∫—É—Ä–∏–Ω–æ–µ —Ñ–∏–ª–µ. '
                '–≠—Ç–æ —Ç–∞–∫ –ª–µ–≥–∫–æ ,–Ω–æ —Ç–æ–ª—å–∫–æ –≤–∫—É—Å–Ω–æ –∏ —Å—ã—Ç–Ω–æ üòã', reply_markup=drinks_1, photo=photo_id['drink'])

@dp.callback_query_handler(text='salat')
async def salat(call : CallbackQuery):
    await call.message.delete()
    await call.message.answer_photo(caption='–ú–µ–Ω—é', reply_markup=salats, photo=photo_id['main_menu'])

@dp.callback_query_handler(text='salat_1')
async def salat_1(call : CallbackQuery):
    await call.message.delete()
    await call.message.answer_photo(
        caption='–ö–∞–∫ —Ä–∞–∑ –∏–∑ —Ç–∞–∫–∏—Ö.üòä \n–ï–≥–æ –ø—Ä–∏—è—Ç–Ω—ã–π,—Å–ª–∞–¥–∫–æ–≤–∞—Ç—ã–π –≤–∫—É—Å –∏ –Ω–µ–æ–±—ã—á–Ω–æ–µ —Å–æ—á–µ—Ç–∞–Ω–∏–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤.'
                '–î–æ–±–∞–≤–ª—è—é—Ç –Ω–∞ –≤–∞—à—É –≥–∞—Å—Ç—Ä–æ–Ω–æ–º–∏—á–µ—Å–∫—É—é –∫–∞—Ä—Ç—É –Ω–æ–≤—ã–π, –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –æ–±—ä–µ–∫—Ç üç≤üòå', reply_markup=salats_1, photo=photo_id['salat'])

@dp.callback_query_handler(text='cold_eat')
async def cold_eat(call : CallbackQuery):
    await call.message.delete()
    await call.message.answer_photo(caption='–ú–µ–Ω—é', reply_markup=cold_eats, photo=photo_id['main_menu'])

@dp.callback_query_handler(text='cold_eat_1')
async def cold_eat_1(call : CallbackQuery):
    await call.message.delete()
    await call.message.answer_photo(
        caption='–û–Ω–∏–≥–∏—Ä–∏ - ‚Äî —ç—Ç–æ —Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–æ–µ —è–ø–æ–Ω—Å–∫–æ–µ –±–ª—é–¥–æ, –∫–æ—Ç–æ—Ä–æ–µ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ —Ç—Ä–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤: '
                '—Ä–∏—Å, –Ω–∞—á–∏–Ω–∫–∞ –∏ –ª–∏—Å—Ç –ø—Ä–µ—Å—Å–æ–≤–∞–Ω–Ω—ã—Ö –≤–æ–¥–æ—Ä–æ—Å–ª–µ–π. –¢–∞–∫–∏–µ —è–ø–æ–Ω—Å–∫–∏–µ —Å—ç–Ω–¥–≤–∏—á–∏ –æ—Ç–ª–∏—á–Ω–æ –ø–æ–¥–æ–π–¥—É—Ç '
                '–¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–µ—Ä–µ–∫—É—Å–∞', reply_markup=cold_eats_1, photo=photo_id['cold_eat'])

@dp.callback_query_handler(text='-')
async def minus(call : CallbackQuery):
    await call.message.delete()
    a = change_a(a)
    await call.message.answer_photo(caption='–ë—É–ª–æ—á–∫–∏', reply_markup=bakerys_1, photo=photo_id['backery'])

@dp.callback_query_handler(text='+')
async def plus(call : CallbackQuery, a = 1, b = 1, c = 1, d = 1, e = 1, f = 1):
    await call.message.delete()
    a += 1
    await call.message.edit_reply_markup()
    await call.message.answer_photo(caption='–ë—É–ª–æ—á–∫–∏', reply_markup=bakerys_1, photo=photo_id['backery'])

@dp.callback_query_handler(text='back')
async def back(call : CallbackQuery):
    await call.message.delete()
    await call.message.answer_photo(caption='–ú–µ–Ω—é', reply_markup=menu, photo=photo_id['main_menu'])









@dp.message_handler(content_types=['photo'])
async def photo(message : Message):
    await message.answer(message.photo[-1].file_id)
    await message.answer(message.from_user.id)