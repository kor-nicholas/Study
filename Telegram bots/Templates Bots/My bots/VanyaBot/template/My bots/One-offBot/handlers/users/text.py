from aiogram import types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardRemove

from loader import dp

from keyboards.default.menu import back, main, shop_markup, back_shop
from keyboards.inline.read import read, order_button

from aiogram.dispatcher import FSMContext
from states.state import Input

from sql.sql_db import SQL_product, SQL_shop, SQL_people
from data.config import db_sql

@dp.message_handler()
async def bot_echo(message: types.Message):
    if message.text == "–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ üîΩ":

        # –î–æ—Å—Ç–∞–µ–º –∏–∑ –±–∞–∑—ã –≤–µ—Å—å —Ç–æ–≤–∞—Ä
        sql_object = SQL_product(db_sql)
        products = sql_object.sql_select_all()
        sql_object.sql_close()

        # –°–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –ù–∞–∑–∞–¥ (–≤ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é)
        await message.answer("–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –≤ –Ω–∞–ª–∏—á–∏–∏", reply_markup=back)

        # –ü–µ—Ä–µ–±–∏—Ä–∞–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –±–∞–∑—ã –∏ –∫–∞–∂–¥–æ–º—É —Ç–æ–≤–∞—Ä—É —Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ (–≤ callback_data –ø–µ—Ä–µ–¥–∞–µ–º id —Ç–æ–≤–∞—Ä–∞)
        for product in products:
            # product[0] - id ; product[1] - name ; product[2] - description ; product[3] - prise ; product[4] - photo_id ;
            #product[5] - count
            buy = InlineKeyboardMarkup(inline_keyboard=[
                [
                    InlineKeyboardButton('-', callback_data=f'{product[0]}-1'),
                    InlineKeyboardButton('1', callback_data='count'),
                    InlineKeyboardButton('+', callback_data=f'{product[0]}+1')
                ],
                [
                    InlineKeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É', callback_data=f'{product[0]}|1')
                ]
            ])

            # –í—Å–µ –µ—â–µ –≤ —Ü–∏–∫–ª–µ –≤—ã–≤–æ–¥–∏–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Å –¥–∞–Ω—ã–º–∏ –æ —Ç–æ–≤–∞—Ä–µ
            await message.answer_photo(caption=f"–ù–∞–∑–≤–∞–Ω–∏–µ: {product[1]}\n\n–û–ø–∏—Å–∞–Ω–∏–µ: \n{product[2]}\n\n–¶–µ–Ω–∞: {product[3]}\n\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {product[5]}", photo=product[4], reply_markup=buy)

    elif message.text == "–£–¥–∞–ª–∏—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã –ø–æ –Ω–æ–º–µ—Ä—É":
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–æ–≤–∞—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å", reply_markup=ReplyKeyboardRemove())
        await Input.delete.set()

    elif message.text == "–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É üßπ":

        # –£–¥–∞–ª—è–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã –ø–æ telegram_id —á–µ–ª–æ–≤–µ–∫–∞
        sql_object = SQL_shop(db_sql)
        sql_object.sql_delete_all_for_telegram_id()
        sql_object.sql_close()

        # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ä–æ–π –∫–æ—Ä–∑–∏–Ω–æ–π
        await message.delete()
        await message.chat.delete_message(message.message_id - 1)
        await message.answer("–ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞", reply_markup=back_shop)

    elif message.text == "üîô –ù–∞–∑–∞–¥":
        await message.answer(f"–ò —Å–Ω–æ–≤–∞ –∑–¥—Ä–∞–≤—Å—Ç–≤—É–π, {message.from_user.full_name}!\n"
                             f"–ù—É —á—Ç–æ ? –ß—Ç–æ-—Ç–æ –≤—ã–±—Ä–∞–ª ? –ï—Å–ª–∏ –Ω–µ—Ç, —Ç–æ –º–æ–∂–µ—à—å —Å–Ω–æ–≤–∞ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ –≤—ã–±—Ä–∞—Ç—å üëá",
                             reply_markup=main)

    elif message.text == '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª ‚Ñπ':
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª + –∫–Ω–æ–ø–∫–∞ "–Ø –ø—Ä–æ—á–∏—Ç–∞–ª" (–¥–µ–ª–∞–µ—Ç –≤ –±–∞–∑–µ '+', –µ—Å–ª–∏ —É–∂–µ –µ—Å—Ç—å '+', —Ç–æ –∫–Ω–æ–ø–∫–∞ –Ω–µ –ø–æ—è–≤–ª—è–µ—Ç—Å—è)

        # –¢–µ–∫—Å—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞
        rules = "–í—ã –∑–∞—à–ª–∏ –≤ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π —Ä–∞–∑–¥–µ–ª"

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤ –±–∞–∑–µ –ø—Ä–æ—á–∏—Ç–∞–ª –ª–∏ —é–∑–µ—Ä –ø—Ä–∞–≤–∏–ª–∞
        sql_object = SQL_people(db_sql)
        read_info = sql_object.select_read_for_telegram_id(message.chat.id)
        sql_object.sql_close()

        # –ï—Å–ª–∏ —á–µ–ª–æ–≤–µ–∫ –ø—Ä–æ—á–∏—Ç–∞–ª (read[0] == '+', —Ç–æ –Ω–µ –≤—ã–≤–æ–¥–∏–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É; –µ—Å–ª–∏ –Ω–µ –ø—Ä–æ—á–∏—Ç–∞–ª - —Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —á—Ç–æ–±—ã –ø—Ä–æ—á–∏—Ç–∞–ª)
        if read_info[0] == '-':
            await message.answer(rules, reply_markup=read)
        if read_info[0] == '+':
            await message.answer(rules, reply_markup=back)


    elif message.text == "–ö–æ—Ä–∑–∏–Ω–∞ üõí" or "üîô –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∫–æ—Ä–∑–∏–Ω—É":

        # –î–æ—Å—Ç–∞–µ–º –∏–∑ –±–∞–∑—ã –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –∫–æ—Ä–∑–∏–Ω–µ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        sql_object = SQL_shop(db_sql)
        shops = sql_object.sql_select_all_for_telegram_id(message.chat.id)
        sql_object.sql_close()

        # –î–µ–ª–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è –æ–±—â–µ–π —Å—É–º–º—ã –∫–æ—Ä–∑–∏–Ω—ã
        total = 0

        # –ì–æ—Ç–æ–≤–∏–º —Ç–µ–∫—Å—Ç –¥–ª—è –∫–æ—Ä–∑–∏–Ω—ã
        text_shop = "–í –∫–æ—Ä–∑–∏–Ω–µ : \n\n"
        for shop in shops:
            # shop[0] - id ; shop[1] - telegram_id ; shop[2] - name ; shop[3] - prise ; shop[4] - count ; shop[5] - total
            text_shop += f"{shop[0]}. {shop[2]} x {shop[4]} = {shop[5]}–≥—Ä–Ω\n"
            total += int(shop[5])
        text_shop += f"\n–ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞ : {total}–≥—Ä–Ω"

        # –î–æ–±–∞–≤–ª—è–µ–º –≤ —Ç–∞–±–ª–∏—Ü—É people –æ–±—â—É—é —Å—É–º–º—É(total)
        sql_object = SQL_people(db_sql)
        sql_object.add_total_for_telegram_id(total, message.chat.id)
        sql_object.sql_close()

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∫–æ—Ä–∑–∏–Ω—ã —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ—Ä–∑–∏–Ω–æ–π (–û—á–∏—Å—Ç–∏—Ç—å, –£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä –ø–æ id, –ù–∞–∑–∞–¥)
        await message.answer(text_shop, reply_markup=shop_markup)
        await message.answer("–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –û–ø–ª–∞—Ç–∏—Ç—å üëá", reply_markup=order_button)

@dp.message_handler(state=Input.delete)
async def delete_for_id_shop(message: types.Message, state: FSMContext):

    # –£–¥–∞–ª—è–µ–º —Ç–æ–≤–∞—Ä –ø–æ id, –∫–æ—Ç–æ—Ä—ã–π –≤–≤–µ–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    sql_object = SQL_shop(db_sql)
    sql_object.sql_delete_for_id(message.text)
    sql_object.sql_close()

    await state.finish()

    # –£–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ —Å—Ç–∞—Ä–æ–π –∫–æ—Ä–∑–∏–Ω–æ–π
    await message.chat.delete_message(message.message_id - 3)
    await message.chat.delete_message(message.message_id - 2)
    await message.answer("–¢–æ–≤–∞—Ä —É–¥–∞–ª–µ–Ω –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã", reply_markup=back_shop)

